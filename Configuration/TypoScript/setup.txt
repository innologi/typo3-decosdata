# Plugin configuration
plugin.tx_decosdata {
	view {
		pluginNamespace = tx_decosdata
		templateRootPaths.0 = EXT:decosdata/Resources/Private/Templates/
		templateRootPaths.1 = {$plugin.tx_decosdata.view.templateRootPath}
		partialRootPaths.0 = EXT:decosdata/Resources/Private/Partials/
		partialRootPaths.1 = {$plugin.tx_decosdata.view.partialRootPath}
		layoutRootPaths.0 = EXT:decosdata/Resources/Private/Layouts/
		layoutRootPaths.1 = {$plugin.tx_decosdata.view.layoutRootPath}
	}
	
	persistence {
		storagePid = {$plugin.tx_decosdata.persistence.storagePid}
	}
	
	features {
		# enabled by default but explicitly enabling this just to add a note:
		# $GLOBALS['TYPO3_CONF_VARS']['FE']['pageNotFoundOnCHashError'] = 1
		# allows us to use the CHash to secure access to parameter values
		# that aren't generated by the plugin itself.
		#
		# using a parameter-related token is a good replacement for the
		# hacky "SecureParameters" feature from the old decospublisher ext.
		requireCHashArgumentForActionArguments = 1
	}
	
	# assets provider configuration, in this case: action=feature
	assets {
		controller.Item.action.xhr {
			javascript {
				inline.tx_decosdata_xhr {
					1 = FILE
					1.file = {$plugin.tx_decosdata.javascript.decosdataXhr}
					placeInFooter = 1
				}
			}
		}
	}
	
	settings {
		# used for API calls
		api {
			type = 1511719610
			defaultFormat = json
		}
	}
}

# API calls, not using eid when requiring plugin context
decosdata_api = PAGE
decosdata_api {
	typeNum < plugin.tx_decosdata.settings.api.type
	config {
		disableAllHeaderCode = 1
		disablePrefixComment = 1
		xhtml_cleaning = 0
		admPanel = 0
		debug = 0
		# to imply that we want caching wherever possible
		no_cache = 0
	}
	10 < tt_content.list.20.decosdata_publish
}

# CSS
page.includeCSS.decosdataFrontend = {$plugin.tx_decosdata.css.frontendFile}