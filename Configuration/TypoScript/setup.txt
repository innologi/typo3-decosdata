# Plugin configuration
plugin.tx_decosdata {
	view {
		templateRootPaths.0 = EXT:decosdata/Resources/Private/Templates/
		templateRootPaths.1 = {$plugin.tx_decosdata.view.templateRootPath}
		partialRootPaths.0 = EXT:decosdata/Resources/Private/Partials/
		partialRootPaths.1 = {$plugin.tx_decosdata.view.partialRootPath}
		layoutRootPaths.0 = EXT:decosdata/Resources/Private/Layouts/
		layoutRootPaths.1 = {$plugin.tx_decosdata.view.layoutRootPath}
	}
	
	persistence {
		storagePid = {$plugin.tx_decosdata.persistence.storagePid}
	}
	
	features {
		# enabled by default but explicitly enabling this just to add a note:
		# $GLOBALS['TYPO3_CONF_VARS']['FE']['pageNotFoundOnCHashError'] = 1
		# allows us to use the CHash to secure access to parameter values
		# that aren't generated by the plugin itself.
		#
		# using a parameter-related token is a good replacement for the
		# hacky "SecureParameters" feature from the old decospublisher ext.
		requireCHashArgumentForActionArguments = 1
	}
}

#@LOW we're forced to use 0,1,2 on arrays that would otherwise expect 10 in TS. This influences the parameter query names, and e.g. 10 causes the original Statement object to fail but not ours. Why is that?

# regelgeving
[globalVar = TSFE:id = 12]
<INCLUDE_TYPOSCRIPT: source="FILE:EXT:decosdata/Configuration/TypoScript/Publish/regelgeving.ts">

# bis
[globalVar = TSFE:id = 13]
<INCLUDE_TYPOSCRIPT: source="FILE:EXT:decosdata/Configuration/TypoScript/Publish/bis.ts">

[global]